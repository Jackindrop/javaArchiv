/** 
Gedächtnisprotokoll - Programmieren 1 - WiSe2021
1. Finden Sie einen Ausdruck für (6 Punkte):
    a. Double d entspricht a/3 (a ist vom Typ int).
    b. Char k entspricht dem n-ten Buchstabe des Alphabets. Das n ist als int
    gegeben
    c. Boolean z gibt an, ob der double n auf die zweite Kommastelle genau 3.14
    entspricht (3.143 ist true, 3.153 ist false).
    Math.round ist nicht erlaubt, double Rundungsfehler müssen beachtet
    werden.
2. Schreiben sie mit Hilfe von for-Schleifen Ausdrücke, welche diese Figur auf der
    console ausgeben. Schreiben sie keine Methode. (Punkte 12)
    #++++++++++
    $#++++++++
    $$#++++++
    $$$#++++
    $$$$#++
    $$$$$#
3. Was sind die Rückgabewerte der methode mit m(8), m(12) und m(25) (Punkte 8)
    public static int m(int a) {
    if(a<=6) {
        return a-1;
    } else if(a % 6 == 0) {
        return 3 * m(a/2) + m(a/3);
    } else {
    return m(a-1) + 2;
    }
}
4. Collections (20 Punkte)
    Schreiben Sie eine Methode die als Übergabeparameter einen String übergeben
    bekommt, welcher einen Dateinamen repräsentiert.
    In der Datei stehen in jeder Zeile ein Name <Leerzeichen> Projektkürzel. Namen
    enthalten kein Leerzeichen. Lesen Sie die Datei ein und speichern sie die Inhalte in
    einer passenden Collection (HashMap, TreeMap, HashSet, TreeSet). Beachten Sie
    unter anderem das Schließen des Scanners.
    Anschließen sollen die Projektkürzel sortiert auf die Konsole ausgegeben werden
    und hinter jedem Kürzel sollen getrennt jeweils die Namen der Mitglieder in
    beliebiger Reihenfolge ausgegeben werden.
    Ist die Datei nicht vorhanden, soll Ihre Methode eine FileNotFoundException
    “Lesefehler” ausgeben.
5. Schreibe eine Methode die ein Array entgegennimmt und die Werte umdreht. Das
    Array soll nicht returned werden sondern das Objekt soll verändert werden (Punkte 10)
    z.B. [1,2,3,4,5] -> [5,4,3,2,1]
6. Zufall (15 Punkte)
    a. Schreibe Methode die eine Zufallszahl zwischen 10 und 20 (jeweils inklusive)
    zurückgibt.
    b. Schreibe eine Methode die eine Summe aus 100 Zufallszahlen berechnet und
    zurückgibt. Benutze dabei die Funktion aus Teilaufgabe a
    c. Schreibe ein Methode die überprüft ob die Summe (Methode aus Teilaufgabe
    b) größer als 1500 ist und gebe true zurück.
    d. Schreibe eine Methode die zählt und zurückgibt wie viele Aufrufe von zufall
    (Teilaufgabe a) benötigt werden damit die kumulative Summe größer als 2000 ist.
    7. Schreibe Logische Ausdrücke die in die Klammern eines if/else passen die einmal
    Abfragen. Geschlecht wird im Char g gespeichert, Name wird im String n gespeichert
    und die Größe wir in Int m gespeichert(Punkte 8):
    a. Männlich und 181 cm groß,
    b. Weiblich und beliebige Größe oder kleiner als 185 cm und beliebiges Geschlecht,
    c. Name nicht "Lina"
    8. Wozu ist das Geheimnisprinzip gut? Kreuzen Sie eine Antwort an. (3 Punkte)
    a. Möglichst voneinander unabhängige Methoden.
    b. Vermeidung von Redundanz, weil geheime Methode schwer reproduziert werden.
    c. Laufzeitgewinn durch effektiveres ausführen der Methoden.
    d. Vermeidung von Rundungsfehlern bei der Übertragung auf Methoden.
    e. Interne Verschlüsselungsalgorithmen vereinfachen Kontrolle.
9. Was gibt dieses Programm aus? (8 Punkte)
    public static void methode(Point a, Point b, int k, String s) {
        a = new Point();
        a.x = 9;
        b.x = 15;
        k = 11;
        s = s + "Y";
    }
    public static void main(String[] args) {
        Point a = new Point(2,2);
        Point b = new Point(4,4);
        int k = 5;
        String s = "B";
        methode(a, b, k, s);
        System.out.println(a.x);
        System.out.println(b.x);
        System.out.println(k);
        System.out.println(s);
    }                                                                       */
    
public class WiSe21 {
    public static void main (String[] args) {
        
    }
}